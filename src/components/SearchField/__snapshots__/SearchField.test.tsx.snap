// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SearchField /> should match a snapshot 1`] = `
<ForwardRef>
  <styled.div
    className=" SearchField "
  >
    <div
      className="gZiGuV  SearchField "
    >
      <styled.div>
        <div
          className="iqexBz"
        >
          <WithStyles(ForwardRef(IconButton))
            aria-label="search"
            disableRipple={true}
          >
            <ForwardRef(IconButton)
              aria-label="search"
              classes={
                Object {
                  "colorInherit": "MuiIconButton-colorInherit",
                  "colorPrimary": "MuiIconButton-colorPrimary",
                  "colorSecondary": "MuiIconButton-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiIconButton-edgeEnd",
                  "edgeStart": "MuiIconButton-edgeStart",
                  "label": "MuiIconButton-label",
                  "root": "MuiIconButton-root",
                  "sizeSmall": "MuiIconButton-sizeSmall",
                }
              }
              disableRipple={true}
            >
              <WithStyles(ForwardRef(ButtonBase))
                aria-label="search"
                centerRipple={true}
                className="MuiIconButton-root"
                disableRipple={true}
                disabled={false}
                focusRipple={true}
              >
                <ForwardRef(ButtonBase)
                  aria-label="search"
                  centerRipple={true}
                  className="MuiIconButton-root"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "focusVisible": "Mui-focusVisible",
                      "root": "MuiButtonBase-root",
                    }
                  }
                  disableRipple={true}
                  disabled={false}
                  focusRipple={true}
                >
                  <button
                    aria-label="search"
                    className="MuiButtonBase-root MuiIconButton-root"
                    disabled={false}
                    onBlur={[Function]}
                    onDragLeave={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <span
                      className="MuiIconButton-label"
                    >
                      <ForwardRef
                        color="inherit"
                      >
                        <WithStyles(ForwardRef(SvgIcon))
                          color="inherit"
                        >
                          <ForwardRef(SvgIcon)
                            classes={
                              Object {
                                "colorAction": "MuiSvgIcon-colorAction",
                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                "colorError": "MuiSvgIcon-colorError",
                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                "root": "MuiSvgIcon-root",
                              }
                            }
                            color="inherit"
                          >
                            <svg
                              aria-hidden={true}
                              className="MuiSvgIcon-root"
                              focusable="false"
                              viewBox="0 0 24 24"
                            >
                              <path
                                d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                              />
                            </svg>
                          </ForwardRef(SvgIcon)>
                        </WithStyles(ForwardRef(SvgIcon))>
                      </ForwardRef>
                    </span>
                  </button>
                </ForwardRef(ButtonBase)>
              </WithStyles(ForwardRef(ButtonBase))>
            </ForwardRef(IconButton)>
          </WithStyles(ForwardRef(IconButton))>
          <Styled(WithStyles(ForwardRef(InputBase)))
            autoCapitalize="none"
            autoComplete="off"
            autoCorrect="off"
            inputProps={
              Object {
                "aria-autocomplete": "list",
                "aria-haspopup": "false",
                "aria-label": "Search…",
              }
            }
            placeholder="Search…"
            spellCheck="false"
            type="search"
          >
            <WithStyles(ForwardRef(InputBase))
              autoCapitalize="none"
              autoComplete="off"
              autoCorrect="off"
              className="hPyQul"
              inputProps={
                Object {
                  "aria-autocomplete": "list",
                  "aria-haspopup": "false",
                  "aria-label": "Search…",
                }
              }
              placeholder="Search…"
              spellCheck="false"
              type="search"
            >
              <ForwardRef(InputBase)
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className="hPyQul"
                classes={
                  Object {
                    "adornedEnd": "MuiInputBase-adornedEnd",
                    "adornedStart": "MuiInputBase-adornedStart",
                    "colorSecondary": "MuiInputBase-colorSecondary",
                    "disabled": "Mui-disabled",
                    "error": "Mui-error",
                    "focused": "Mui-focused",
                    "formControl": "MuiInputBase-formControl",
                    "fullWidth": "MuiInputBase-fullWidth",
                    "input": "MuiInputBase-input",
                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                    "inputMarginDense": "MuiInputBase-inputMarginDense",
                    "inputMultiline": "MuiInputBase-inputMultiline",
                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                    "marginDense": "MuiInputBase-marginDense",
                    "multiline": "MuiInputBase-multiline",
                    "root": "MuiInputBase-root",
                  }
                }
                inputProps={
                  Object {
                    "aria-autocomplete": "list",
                    "aria-haspopup": "false",
                    "aria-label": "Search…",
                  }
                }
                placeholder="Search…"
                spellCheck="false"
                type="search"
              >
                <div
                  autoCapitalize="none"
                  autoCorrect="off"
                  className="MuiInputBase-root hPyQul"
                  onClick={[Function]}
                  spellCheck="false"
                >
                  <input
                    aria-autocomplete="list"
                    aria-haspopup="false"
                    aria-label="Search…"
                    autoComplete="off"
                    className="MuiInputBase-input MuiInputBase-inputTypeSearch"
                    onAnimationStart={[Function]}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    placeholder="Search…"
                    type="search"
                  />
                </div>
              </ForwardRef(InputBase)>
            </WithStyles(ForwardRef(InputBase))>
          </Styled(WithStyles(ForwardRef(InputBase)))>
        </div>
      </styled.div>
    </div>
  </styled.div>
</ForwardRef>
`;
